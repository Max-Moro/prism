# generated by datamodel-codegen:
#   filename:  blueprint.schema.json

from __future__ import annotations

from typing import Dict, List, Optional, Union

from pydantic import BaseModel, Extra, Field

from . import resource_profile


class ResourceQuantity(BaseModel):
    class Config:
        extra = Extra.forbid

    cpu: str
    memory: str


class ResourceFormula(BaseModel):
    class Config:
        extra = Extra.forbid

    cpu: str
    memory: str


class BusinessModule(BaseModel):
    class Config:
        extra = Extra.forbid

    title: str
    description: Optional[str] = None
    services: List[str]
    parameters: Optional[Dict[str, Union[float, str, bool]]] = None


class ServiceResources1(BaseModel):
    class Config:
        extra = Extra.forbid

    profile: str = Field(..., regex="^[a-z0-9-]+(@dyn)?$")


class ServiceResources2(BaseModel):
    class Config:
        extra = Extra.forbid

    requests: ResourceQuantity
    limits: ResourceQuantity


class ServiceResources(BaseModel):
    __root__: Union[ServiceResources1, ServiceResources2]


class Capacity(BaseModel):
    __root__: Optional[Dict[str, str]] = None


class TechnicalService(BaseModel):
    class Config:
        extra = Extra.forbid

    image: str
    resources: ServiceResources
    capacity: Optional[Capacity] = None
    depends_on: Optional[List[str]] = None


class GenericService(BaseModel):
    __root__: TechnicalService


class InfraDependency(BaseModel):
    class Config:
        extra = Extra.forbid

    type: str
    version: Optional[str] = None
    capacity: Optional[Capacity] = None


class PrismBlueprint(BaseModel):
    kind: str = Field("Blueprint", const=True)
    team: str = Field(..., regex="^[a-z0-9-]+$")
    version: str = Field(
        ...,
        description="semver",
        regex="^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-[\\w\\.-]+)?(?:\\+[\\w\\.-]+)?$",
    )
    business_modules: Optional[Dict[str, BusinessModule]] = None
    technical_services: Optional[Dict[str, TechnicalService]] = None
    generic_services: Optional[Dict[str, GenericService]] = None
    infra_dependencies: Optional[Dict[str, InfraDependency]] = None
    resource_profiles: Optional[Dict[str, resource_profile.Schema]] = None
